[user]
	name = TerryH
	email = terry@tnthughes.net
[core]
	editor = "C:/Windows/gvim.bat -f"
[rebase]
	autoSquash = true
	autoStash = true
[merge]
	ff = false
[alias]
	h = help
	pushf = push --force-with-lease
#	ci = commit
#	cia = commit --amend -C HEAD
#	cob = checkout -b
#	cp = cherry-pick
#	cpa = cherry-pick --abort
#	f ="!f() { git fetch ${1:-origin}; }; f"
#	nuke = clean -xdf
#	po = push origin
#	pom = push origin master
#	pub ="!f() { git push -u ${1:-origin} `git symbolic-ref HEAD`; }; f"
#	pubp ="!f() { git push --force-with-lease -u ${1:-origin} `git symbolic-ref HEAD`; }; f"
#	brk = "!f() { gitk `git branch --list $1`; }; f"
##	cleanup-tag = "!f() { git push ${2:-origin} :$1; git tag -d $1; }; f"
#	cleanupD = "!f() { git push ${2:-origin} :$1; git branch -D $1; }; f"
#	cop = checkout -p
##	cub = "!f() { git cleanup bugfix/alfa-$1 $2; }; f"
##	cuf = "!f() { git cleanup feature/alfa-$1 $2; }; f"
##	cut = "!f() { git cleanup-tag $1 $2; }; f"
	d = "!f() { git diff ${1:-origin}/`git symbolic-ref --short HEAD`; }; f"
#	di = "!f() { git lg `git symbolic-ref --short HEAD`..${1:-origin}/`git symbolic-ref --short HEAD`; }; f"
#	dik = "!f() { gitk `git symbolic-ref --short HEAD`..${1:-origin}/`git symbolic-ref --short HEAD`; }; f"
#	fa = fetch --all
#	fp = "!f() { git fetch ${1:-origin} --prune; }; f"
#	fp-dr = "!f() { git fetch ${1:-origin} --prune --dry-run; }; f"
#	rbm = rebase master
